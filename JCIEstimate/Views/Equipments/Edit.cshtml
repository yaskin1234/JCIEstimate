@model JCIEstimate.Models.Equipment

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit", "Equipments", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <h4>Equipment</h4>
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.equipmentUid)
        @Html.HiddenFor(model => model.useReplacement)        
        
        @Html.ActionLink("Back to List", "Index")
        
        <div class="form-group">
            <center>
                @if (ViewBag.previousEquipment != null)
                {
                    <a href="/Equipments/Edit/@ViewBag.previousEquipment.equipmentUid"><img src="~/Images/previous.png" style="height:20px;width:40px;" alt="previous" title="previous item" /></a>
                }
                &nbsp; &nbsp; &nbsp;
                @if (ViewBag.nextEquipment != null)
                {
                    <a href="/Equipments/Edit/@ViewBag.nextEquipment.equipmentUid"><img src="~/Images/next.png" style="height:20px;width:40px;" alt="next" title="next item" /></a>
                }
            </center>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.equipmentUidAsReplaced, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.DropDownList("equipmentUidAsReplaced", null, htmlAttributes: new { @class = "form-control" })
                }
                else
                {
                    @Html.DisplayFor(model => model.equipmentUidAsReplaced)
                }                
                @Html.ValidationMessageFor(model => model.equipmentUidAsReplaced, "", new { @class = "text-danger" })
            </div>
        </div>     

        <div class="form-group">
            @Html.LabelFor(model => model.equipmentAttributeTypeUid, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.DropDownList("equipmentAttributeTypeUid", null, htmlAttributes: new { @class = "form-control" })
                }
                else
                {
                    @Html.DisplayFor(model => model.EquipmentAttributeType.equipmentAttributeType1)
                }
                
                
                @Html.ValidationMessageFor(model => model.equipmentAttributeTypeUid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><b>Equipment Attributes</b></div>
            <div class="col-md-10">
                <table class="table" id="tblAttributes">
                    @foreach (var item in ViewBag.equipmentAttributeValues)
                    {
                        <tr>
                            <td>
                                @item.EquipmentAttribute.equipmentAttribute1
                            </td>
                            <td>
                                @if (item.EquipmentAttribute.AppDataType.appDataType1 == "Boolean")
                                {
                                    if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                                    {
                                        <input type="checkbox" name="@item.equipmentAttributeUid" @((item.equipmentAttributeValue1 == "on") ? "CHECKED" : "") />
                                    }
                                    else
                                    {
                                        @((item.equipmentAttributeValue1 == "on") ? "Yes" : "No")
                                    }

                                }
                                else
                                {
                                    if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                                    {
                                        <input type="text" name="@item.equipmentAttributeUid" value="@item.equipmentAttributeValue1" />
                                    }
                                    else
                                    {
                                        @item.equipmentAttributeValue1
                                    }
                                }
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isNewToSite, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.CheckBoxFor(model => model.isNewToSite)
                }
                else
                {
                    @((Model.isNewToSite == true) ? "Yes" : "No")
                }
                
                @Html.ValidationMessageFor(model => model.isNewToSite, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ecmUid, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.DropDownList("ecmUid", null, htmlAttributes: new { @class = "form-control" })
                }
                else
                {
                    @Model.ECM.ecmString
                }                
                @Html.ValidationMessageFor(model => model.ecmUid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.locationUid, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.DropDownList("locationUid", null, htmlAttributes: new { @class = "form-control" })
                }
                else
                {
                    @Model.Location.location1
                }                
                @Html.ValidationMessageFor(model => model.locationUid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.jciTag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.EditorFor(model => model.jciTag, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Model.jciTag
                }
                @Html.ValidationMessageFor(model => model.jciTag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ownerTag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.EditorFor(model => model.ownerTag, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Model.ownerTag
                }                
                @Html.ValidationMessageFor(model => model.ownerTag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.EditorFor(model => model.manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Model.manufacturer
                }                
                @Html.ValidationMessageFor(model => model.manufacturer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.EditorFor(model => model.model, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Model.model
                } 
                @Html.ValidationMessageFor(model => model.model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.EditorFor(model => model.serialNumber, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Model.serialNumber
                }                
                @Html.ValidationMessageFor(model => model.serialNumber, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.newManufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.EditorFor(model => model.newManufacturer, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Model.manufacturer
                }
                @Html.ValidationMessageFor(model => model.newManufacturer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newModel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.EditorFor(model => model.newModel, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Model.model
                }
                @Html.ValidationMessageFor(model => model.newModel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.newSerial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.EditorFor(model => model.newSerial, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Model.serialNumber
                }
                @Html.ValidationMessageFor(model => model.newSerial, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.installDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.EditorFor(model => model.installDate, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Model.installDate
                }                
                @Html.ValidationMessageFor(model => model.installDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div @*class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Model.price
                }
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.area, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.EditorFor(model => model.area, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Model.area
                }                
                @Html.ValidationMessageFor(model => model.area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Equipment Condition", null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {
                    @Html.DropDownList("equipmentConditionUid", null, htmlAttributes: new { @class = "form-control" })
                }
                else
                {
                    if (Model.EquipmentCondition != null)
                    {
                        @Model.EquipmentCondition.equipmentCondition1
                    }
                    else
                    {
                        @Html.DisplayText("N/A")
                    }
                }
                @Html.ValidationMessageFor(model => model.equipmentConditionUid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tasks", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table style="border-top:hidden;">
                    <tr>
                        @foreach (var eitem in ViewBag.equipmentTasks)
                        {
                            <th class="GridTable">@eitem.equipmentTask1</th>
                        }
                        <th>&nbsp;</th>
                    </tr>
                    <tr>
                        @foreach (var task in ViewBag.equipmentTasks)
                        {
                            string chked = "";

                            foreach (var toDo in ViewBag.equipmentToDoes)
                            {
                                if (toDo.equipmentUid == Model.equipmentUid && toDo.equipmentTaskUid == task.equipmentTaskUid)
                                {
                                    chked = "CHECKED";
                                }
                            }
                            if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                            {
                                <td class="GridTable"><input class="gridCheckBox" type="checkbox" name="@(Model.equipmentUid)_@(task.equipmentTaskUid)" @chked /> </td>
                            }
                            else
                            {

                                <td>@((chked == "CHECKED") ? "Yes" : "No")</td>
                            }

                        }
                    </tr>
                </table>
            </div>
        </div>        


        <div class="form-group">
            @Html.Label("Equipment Notes", null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table class="table">
                    <tr>
                        <th>Type</th>
                        <th>Note</th>
                    </tr>
                    @foreach (var note in Model.EquipmentNotes)
                    {
                        
                        <tr>
                            <td>@note.EquipmentNoteType.equipmentNoteType1</td>
                            <td>@note.equipmentNote1</td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", "EquipmentNotes", new { id = note.equipmentNoteUid }, null) |
                                @Html.ActionLink("Delete", "Delete", "EquipmentNotes", new { id = note.equipmentNoteUid }, null)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Add Equipment Note", null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table class="table">
                    <tr>
                        <td>@Html.DropDownList("equipmentNoteTypeUid", null, htmlAttributes: new { @class = "form-control" })</td>
                        <td>@Html.TextBox("newNote")</td>                        
                    </tr>
                </table>
            </div>
        </div>

        @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        }


        @*<div class="form-group">
            @Html.Label("Add Pictures", null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="pics" multiple class="btn btn-default" />
            </div>
        </div>*@        


        @if (Model != null)
        {
            <h3>Images</h3>
            <table class="table-condensed">
                @foreach (var item in Model.EquipmentAttachments)
                {
                    <tr>
                        <td>@item.equipmentAttachment1</td>
                        <td><img class="img-zoom" src="@Url.Action("showImage", "Equipments", new { id = item.equipmentAttachmentUid } )" alt="test" /></td>
                        @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                        {
                            <td><a href="@Url.Action("Delete", "EquipmentAttachments", new { id = item.equipmentAttachmentUid })"><img src="@Url.Content("~/Images/delete-icon.png")" height="15" width="15" alt="Click to Delete" title="Click to Delete" /></a></td>
                        }
                    </tr>
                }

            </table>
        }        
        
    </div>    
}

<div>    
    @Html.ActionLink("Back to List", "Index")    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@model JCIEstimate.Models.Equipment

@{
    ViewBag.Title = "Review/Add pictures for " + Convert.ToInt64(Model.jciTag);
}

@using (Html.BeginForm("EngineerEdit", "Equipments", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.equipmentUid)
    
    <div class="form-horizontal">
        <div>@Html.ActionLink("Edit equipment", "Edit", new { id = Model.equipmentUid }) | @Html.ActionLink("Create New Tag", "EngineerCreate")</div>
        <hr />        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.jciTag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.jciTag, new { htmlAttributes = new { @class = "form-control" } })<span class="field-validation-error" id="saveResult">@ViewBag.result</span>
                @Html.ValidationMessageFor(model => model.jciTag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.equipmentAttributeTypeUid, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <span>@Model.EquipmentAttributeType.equipmentAttributeType1</span>                                
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><b>Equipment Attributes</b></div>
                <div class="col-md-10">
                    <table class="table" id="tblAttributes">
                        @foreach (var item in ViewBag.equipmentAttributeValues)
                    {
                            <tr>
                                <td>
                                    @item.EquipmentAttribute.equipmentAttribute1
                                </td>
                                <td>
                                    @if (item.EquipmentAttribute.AppDataType.appDataType1 == "Boolean")
                                    {
                                        <input type="checkbox" name="@item.equipmentAttributeUid" @((item.equipmentAttributeValue1 == "on") ? "CHECKED" : "" ) disabled="disabled" />
                                    }
                                    else
                                    {
                                        <div>@item.equipmentAttributeValue1</div>
                                    }
                                </td>
                            </tr>
                    }
                    </table>
                </div>
            </div>
        

        <div class="form-group">
            @Html.LabelFor(model => model.locationUid, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.Location.location1                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.controlTypeUid, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.ControlType.controlType1
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ownerTag, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.ownerTag, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ownerTag, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.manufacturer, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.manufacturer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.model, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serialNumber, null, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.serialNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.serialNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EquipmentCondition.equipmentCondition1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.EquipmentCondition.equipmentCondition1, new { htmlAttributes = new { @class = "form-control" } })                
            </div>
        </div>


        <div class="form-group">
            <div>Existing Pictures</div>
            @foreach (var attachment in Model.EquipmentAttachments)
            {
                @attachment.equipmentAttachment1
                <img height="100px" width="100ox" src="@Url.Action("showImage", "Equipments", new { id = attachment.equipmentAttachmentUid })" alt="test" />
            }
            <div>
                <div class="col-md-10">Add Pictures</div>
                <input type="file" name="pics" multiple class="btn btn-default" />
                <input type="submit" name="submit" value="Upload Pictures" class="btn btn-default" onclick="collectAttributeValues();this.style.visibility = 'hidden'; document.getElementById('loadingMessage').innerHTML = 'loading...';" ondblclick="    this.style.visibility = 'hidden'; document.getElementById('loadingMessage').innerHTML = 'loading...';" />
            </div>
        </div>    

    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

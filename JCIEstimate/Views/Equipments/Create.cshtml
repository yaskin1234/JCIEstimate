@model JCIEstimate.Models.Equipment

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Equipment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div id="dvECM">
            <div class="form-group">
                @Html.LabelFor(model => model.ecmUid, null, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ecms", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ecmUid, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div id="dvNewOrReplacement" style="display:none;">
            <div class="form-group">
                @Html.Label("New or replacement?", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select name="cbNewOrRepalcement" id="cbNewOrRepalcement" class="form-control">
                        <option value="Choose">-- Choose --</option>
                        <option value="New">New</option>
                        <option value="Replacement">Replacement</option>
                    </select>
                </div>
            </div>
        </div>
        <div id="dvReplacement" style="display:none;">
            <div class="form-group">
                @Html.LabelFor(model => model.equipmentUidAsReplacement, null, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("equipmentUidAsReplacement", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.equipmentUidAsReplacement, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        <div id="dvDetails" style="display:none;">
            <div class="form-group">
                @Html.LabelFor(model => model.equipmentAttributeTypeUid, null, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("equipmentAttributeTypeUid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.equipmentAttributeTypeUid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.locationUid, null, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("locationUid", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.locationUid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.jciTag, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.jciTag, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.jciTag, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ownerTag, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ownerTag, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ownerTag, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.manufacturer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.model, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.model, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.model, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.serialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.serialNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.serialNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.installDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.installDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.installDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.area, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.area, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.area, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

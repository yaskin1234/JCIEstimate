@model JCIEstimate.Models.MasterSchedule

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
@{var counter = 0;}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>MasterSchedule</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.masterScheduleUid)

        <div class="form-group">
            @Html.LabelFor(model => model.projectUid, "projectUid", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("projectUid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.projectUid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.locationUid, "locationUid", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("locationUid", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.locationUid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.masterSchedule1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.masterSchedule1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.masterSchedule1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.room, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.room, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.room, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>    
    <table border="1" class="table-condensed">
        <tr>
            <th>
                Sequence
            </th>
            <th>
                Task Name
            </th>
            <th>
                Predecessors
            </th>
            <th> </th>
        </tr>
        
        @foreach (var task in Model.GetTasksForMaster())
        {
            counter += 1;
            <tr>
                <td>
                    @task.taskSequence
                </td>
                <td>
                    @task.taskName
                </td>
                <td>
                    <input type="text" name="@task.masterScheduleTaskUid" value="@task.masterScheduleIdAsPredecessors" />
                </td>
                <td>
                    <a href="@Url.Action("Delete", "MasterScheduleTasks", new { id = task.masterScheduleTaskUid })"><img src="@Url.Content("~/Images/delete-icon.png")" height="15" width="15" alt="Click to Delete" title="Click to Delete" /></a>
                </td>
            </tr>
        }
    
    </table>
    }
    <a id="addNewMasterTask">add  new task</a>
    @using (Html.BeginForm("Create", "MasterScheduleTasks"))
    {
        @Html.AntiForgeryToken()        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.masterScheduleUid)
        var newUid = Guid.NewGuid();
        counter += 1;
        <table id="masterTaskNewTaskTable" style="display:none;" class="table-condensed">
            <tr>
                <th>
                    Seq
                </th>
                <th>
                    Name
                </th>
                <th>
                    Pred
                </th>
            </tr>
            <tr id="masterTaskNewRow">
                <td>
                    @Html.TextBox("taskSequence", counter)
                </td>
                <td>
                    @Html.TextBox("taskName")
                </td>
                <td>
                    @Html.TextBox("masterScheduleIdAsPredecessors")                    
                </td>
                <td>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Add" class="btn btn-default" />
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    }




<div>
    @Html.ActionLink("Back to List", "Index")
</div>
